(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{375:function(a,e,s){"use strict";s.r(e);var r=s(14),t=Object(r.a)({},(function(){var a=this,e=a._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h2",{attrs:{id:"容器相关指令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#容器相关指令"}},[a._v("#")]),a._v(" 容器相关指令")]),a._v(" "),e("h3",{attrs:{id:"_1-docker-run"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-docker-run"}},[a._v("#")]),a._v(" 1. docker run")]),a._v(" "),e("ul",[e("li",[a._v("启动一个新的容器并运行指定的镜像。")]),a._v(" "),e("li",[a._v("语法："),e("code",[a._v("docker run [OPTIONS] <image_name>")])]),a._v(" "),e("li",[a._v("例子:")])]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" run "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("8080")]),a._v(":80 nginx:latest\n")])])]),e("p",[e("strong",[a._v("解释：")])]),a._v(" "),e("ul",[e("li",[e("code",[a._v("-d")]),a._v("：以分离模式启动容器，容器将在后台运行。")]),a._v(" "),e("li",[e("code",[a._v("-p 8080:80")]),a._v("：将宿主机的 "),e("code",[a._v("8080")]),a._v(" 端口映射到容器的 "),e("code",[a._v("80")]),a._v(" 端口。")]),a._v(" "),e("li",[e("code",[a._v("nginx:latest")]),a._v("：使用 "),e("code",[a._v("nginx")]),a._v(" 镜像的 "),e("code",[a._v("latest")]),a._v(" 标签启动容器。")])]),a._v(" "),e("hr"),a._v(" "),e("h3",{attrs:{id:"_2-docker-ps"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-docker-ps"}},[a._v("#")]),a._v(" 2. docker ps")]),a._v(" "),e("ul",[e("li",[a._v("列出正在运行的容器。")]),a._v(" "),e("li",[a._v("语法："),e("code",[a._v("docker ps [OPTIONS]")])]),a._v(" "),e("li",[a._v("例子:")])]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("ps")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-a")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--filter")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"status=exited"')]),a._v("\n")])])]),e("p",[e("strong",[a._v("解释：")])]),a._v(" "),e("ul",[e("li",[e("code",[a._v("-a")]),a._v("：列出所有容器（包括已经停止的容器）。")]),a._v(" "),e("li",[e("code",[a._v('--filter "status=exited"')]),a._v('：筛选出状态为 "exited" 的容器。')])]),a._v(" "),e("hr"),a._v(" "),e("h3",{attrs:{id:"_3-docker-exec"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-docker-exec"}},[a._v("#")]),a._v(" 3. docker exec")]),a._v(" "),e("ul",[e("li",[a._v("在运行的容器中执行命令。")]),a._v(" "),e("li",[a._v("语法："),e("code",[a._v("docker exec [OPTIONS] <container_name> <command>")])]),a._v(" "),e("li",[a._v("例子:")])]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("exec")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-it")]),a._v(" mycontainer "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("bash")]),a._v("\n")])])]),e("p",[e("strong",[a._v("解释：")])]),a._v(" "),e("ul",[e("li",[e("code",[a._v("-it")]),a._v("："),e("code",[a._v("-i")]),a._v(" 保持标准输入流，"),e("code",[a._v("-t")]),a._v(" 分配伪终端，允许交互式命令执行。")]),a._v(" "),e("li",[e("code",[a._v("mycontainer")]),a._v("：指定要执行命令的容器名称。")]),a._v(" "),e("li",[e("code",[a._v("bash")]),a._v("：在容器内启动一个 Bash shell。")])]),a._v(" "),e("hr"),a._v(" "),e("h3",{attrs:{id:"_4-docker-stop"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-docker-stop"}},[a._v("#")]),a._v(" 4. docker stop")]),a._v(" "),e("ul",[e("li",[a._v("停止一个运行中的容器。")]),a._v(" "),e("li",[a._v("语法："),e("code",[a._v("docker stop <container_name>")])]),a._v(" "),e("li",[a._v("例子:")])]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" stop mycontainer\n")])])]),e("p",[e("strong",[a._v("解释：")])]),a._v(" "),e("ul",[e("li",[e("code",[a._v("mycontainer")]),a._v("：指定要停止的容器名称。")])]),a._v(" "),e("hr"),a._v(" "),e("h3",{attrs:{id:"_5-docker-start"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-docker-start"}},[a._v("#")]),a._v(" 5. docker start")]),a._v(" "),e("ul",[e("li",[a._v("启动一个停止的容器。")]),a._v(" "),e("li",[a._v("语法："),e("code",[a._v("docker start <container_name>")])]),a._v(" "),e("li",[a._v("例子:")])]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" start mycontainer\n")])])]),e("p",[e("strong",[a._v("解释：")])]),a._v(" "),e("ul",[e("li",[e("code",[a._v("mycontainer")]),a._v("：指定要启动的容器名称。")])]),a._v(" "),e("hr"),a._v(" "),e("h3",{attrs:{id:"_6-docker-restart"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_6-docker-restart"}},[a._v("#")]),a._v(" 6. docker restart")]),a._v(" "),e("ul",[e("li",[a._v("重启一个运行中的容器。")]),a._v(" "),e("li",[a._v("语法："),e("code",[a._v("docker restart [OPTIONS] <container_name>")])]),a._v(" "),e("li",[a._v("例子:")])]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" restart mycontainer\n")])])]),e("p",[e("strong",[a._v("解释：")])]),a._v(" "),e("ul",[e("li",[e("code",[a._v("mycontainer")]),a._v("：指定要重启的容器名称。")])]),a._v(" "),e("hr"),a._v(" "),e("h3",{attrs:{id:"_7-docker-rm"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_7-docker-rm"}},[a._v("#")]),a._v(" 7. docker rm")]),a._v(" "),e("ul",[e("li",[a._v("删除一个容器。")]),a._v(" "),e("li",[a._v("语法："),e("code",[a._v("docker rm [OPTIONS] <container_name>")])]),a._v(" "),e("li",[a._v("例子:")])]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" mycontainer\n")])])]),e("p",[e("strong",[a._v("解释：")])]),a._v(" "),e("ul",[e("li",[e("code",[a._v("mycontainer")]),a._v("：指定要删除的容器名称。")])]),a._v(" "),e("hr"),a._v(" "),e("h3",{attrs:{id:"_8-docker-logs"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_8-docker-logs"}},[a._v("#")]),a._v(" 8. docker logs")]),a._v(" "),e("ul",[e("li",[a._v("查看容器的日志。")]),a._v(" "),e("li",[a._v("语法："),e("code",[a._v("docker logs [OPTIONS] <container_name>")])]),a._v(" "),e("li",[a._v("例子:")])]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" logs "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--tail")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("100")]),a._v(" mycontainer\n")])])]),e("p",[e("strong",[a._v("解释：")])]),a._v(" "),e("ul",[e("li",[e("code",[a._v("-f")]),a._v("：实时跟踪日志输出。")]),a._v(" "),e("li",[e("code",[a._v("--tail 100")]),a._v("：显示日志的最后 100 行。")]),a._v(" "),e("li",[e("code",[a._v("mycontainer")]),a._v("：指定要查看日志的容器名称。")])]),a._v(" "),e("hr"),a._v(" "),e("h2",{attrs:{id:"镜像相关指令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#镜像相关指令"}},[a._v("#")]),a._v(" 镜像相关指令")]),a._v(" "),e("h3",{attrs:{id:"_1-docker-pull"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-docker-pull"}},[a._v("#")]),a._v(" 1. docker pull")]),a._v(" "),e("ul",[e("li",[a._v("从 Docker 仓库拉取指定镜像。")]),a._v(" "),e("li",[a._v("语法："),e("code",[a._v("docker pull [OPTIONS] <image_name>")])]),a._v(" "),e("li",[a._v("例子:")])]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" pull nginx:latest\n")])])]),e("p",[e("strong",[a._v("解释：")])]),a._v(" "),e("ul",[e("li",[e("code",[a._v("nginx:latest")]),a._v("：拉取 "),e("code",[a._v("nginx")]),a._v(" 镜像的 "),e("code",[a._v("latest")]),a._v(" 标签。")])]),a._v(" "),e("hr"),a._v(" "),e("h3",{attrs:{id:"_2-docker-build"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-docker-build"}},[a._v("#")]),a._v(" 2. docker build")]),a._v(" "),e("ul",[e("li",[a._v("使用 Dockerfile 构建一个镜像。")]),a._v(" "),e("li",[a._v("语法："),e("code",[a._v("docker build [OPTIONS] <context>")])]),a._v(" "),e("li",[a._v("例子：")])]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" build "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-t")]),a._v(" myapp:1.0 "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v("\n")])])]),e("p",[e("strong",[a._v("解释：")])]),a._v(" "),e("ul",[e("li",[e("code",[a._v("-t myapp:1.0")]),a._v("：为镜像指定标签 "),e("code",[a._v("myapp:1.0")]),a._v("。")]),a._v(" "),e("li",[e("code",[a._v(".")]),a._v("：构建上下文为当前目录，包含 Dockerfile 文件。")])]),a._v(" "),e("hr"),a._v(" "),e("h3",{attrs:{id:"_3-docker-images"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-docker-images"}},[a._v("#")]),a._v(" 3. docker images")]),a._v(" "),e("ul",[e("li",[a._v("列出本地已有的镜像。")]),a._v(" "),e("li",[a._v("语法："),e("code",[a._v("docker images [OPTIONS]")])]),a._v(" "),e("li",[a._v("例子:")])]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" images "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--filter")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"dangling=true"')]),a._v("\n")])])]),e("p",[e("strong",[a._v("解释：")])]),a._v(" "),e("ul",[e("li",[e("code",[a._v('--filter "dangling=true"')]),a._v("：筛选出悬空镜像（没有标签的镜像）。")])]),a._v(" "),e("hr"),a._v(" "),e("h3",{attrs:{id:"_4-docker-rmi"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-docker-rmi"}},[a._v("#")]),a._v(" 4. docker rmi")]),a._v(" "),e("ul",[e("li",[a._v("删除本地的镜像。")]),a._v(" "),e("li",[a._v("语法："),e("code",[a._v("docker rmi [OPTIONS] <image_name>")])]),a._v(" "),e("li",[a._v("例子:")])]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" rmi myapp:1.0\n")])])]),e("p",[e("strong",[a._v("解释：")])]),a._v(" "),e("ul",[e("li",[e("code",[a._v("myapp:1.0")]),a._v("：删除标签为 myapp:1.0 的镜像。")])]),a._v(" "),e("hr"),a._v(" "),e("h3",{attrs:{id:"_5-docker-tag"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-docker-tag"}},[a._v("#")]),a._v(" 5. docker tag")]),a._v(" "),e("ul",[e("li",[a._v("为本地的镜像添加标签。")]),a._v(" "),e("li",[a._v("语法："),e("code",[a._v("docker tag <source_image> <target_image>")])]),a._v(" "),e("li",[a._v("例子:")])]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" tag myapp:1.0 myapp:latest\n")])])]),e("p",[e("strong",[a._v("解释：")])]),a._v(" "),e("ul",[e("li",[e("code",[a._v("myapp:1.0")]),a._v("：源镜像的标签。")]),a._v(" "),e("li",[e("code",[a._v("myapp:latest")]),a._v("：目标镜像的标签。")])]),a._v(" "),e("hr"),a._v(" "),e("h2",{attrs:{id:"网络管理相关指令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#网络管理相关指令"}},[a._v("#")]),a._v(" 网络管理相关指令")]),a._v(" "),e("h3",{attrs:{id:"_1-docker-network-ls"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-docker-network-ls"}},[a._v("#")]),a._v(" 1. docker network ls")]),a._v(" "),e("ul",[e("li",[a._v("列出 Docker 主机上所有的网络。")]),a._v(" "),e("li",[a._v("语法："),e("code",[a._v("docker network ls [OPTIONS]")])]),a._v(" "),e("li",[a._v("例子:")])]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" network "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--filter")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"driver=bridge"')]),a._v("\n")])])]),e("p",[e("strong",[a._v("解释：")])]),a._v(" "),e("ul",[e("li",[e("code",[a._v('--filter "driver=bridge"')]),a._v("：筛选出使用 bridge 驱动的网络。")])]),a._v(" "),e("hr"),a._v(" "),e("h3",{attrs:{id:"_2-docker-network-inspect"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-docker-network-inspect"}},[a._v("#")]),a._v(" 2. docker network inspect")]),a._v(" "),e("ul",[e("li",[a._v("查看 Docker 主机上指定的网络的详细信息。")]),a._v(" "),e("li",[a._v("语法："),e("code",[a._v("docker network inspect <network_name>")])]),a._v(" "),e("li",[a._v("例子:")])]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" network inspect bridge\n")])])]),e("p",[e("strong",[a._v("解释：")])]),a._v(" "),e("ul",[e("li",[e("code",[a._v("bridge")]),a._v("：查看默认的桥接网络 bridge 的详细信息。")])]),a._v(" "),e("hr"),a._v(" "),e("h3",{attrs:{id:"_3-docker-network-create"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-docker-network-create"}},[a._v("#")]),a._v(" 3. docker network create")]),a._v(" "),e("ul",[e("li",[a._v("创建一个新的 Docker 网络。")]),a._v(" "),e("li",[a._v("语法："),e("code",[a._v("docker network create [OPTIONS] <network_name>")])]),a._v(" "),e("li",[a._v("例子:")])]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" network create "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--driver")]),a._v(" bridge my_network\n")])])]),e("p",[e("strong",[a._v("解释：")])]),a._v(" "),e("ul",[e("li",[e("code",[a._v("--driver bridge")]),a._v("：指定使用 bridge 网络驱动。")]),a._v(" "),e("li",[e("code",[a._v("my_network")]),a._v("：新创建的网络名称。")])]),a._v(" "),e("hr"),a._v(" "),e("h2",{attrs:{id:"卷管理相关指令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#卷管理相关指令"}},[a._v("#")]),a._v(" 卷管理相关指令")]),a._v(" "),e("h3",{attrs:{id:"_1-docker-volume-ls"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-docker-volume-ls"}},[a._v("#")]),a._v(" 1. docker volume ls")]),a._v(" "),e("ul",[e("li",[a._v("列出所有 Docker 卷。")]),a._v(" "),e("li",[a._v("语法："),e("code",[a._v("docker volume ls [OPTIONS]")])]),a._v(" "),e("li",[a._v("例子:")])]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" volume "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--filter")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"driver=local"')]),a._v("\n")])])]),e("p",[e("strong",[a._v("解释：")])]),a._v(" "),e("ul",[e("li",[e("code",[a._v('--filter "driver=local"')]),a._v("：筛选出使用 local 驱动的卷。")])]),a._v(" "),e("hr"),a._v(" "),e("h3",{attrs:{id:"_2-docker-volume-inspect"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-docker-volume-inspect"}},[a._v("#")]),a._v(" 2. docker volume inspect")]),a._v(" "),e("ul",[e("li",[a._v("查看指定卷的详细信息。")]),a._v(" "),e("li",[a._v("语法："),e("code",[a._v("docker volume inspect <volume_name>")])]),a._v(" "),e("li",[a._v("例子:")])]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" volume inspect my_volume\n")])])]),e("p",[e("strong",[a._v("解释：")])]),a._v(" "),e("ul",[e("li",[e("code",[a._v("my_volume")]),a._v("：查看名为 my_volume 的卷的详细信息。")])]),a._v(" "),e("hr"),a._v(" "),e("h3",{attrs:{id:"_3-docker-volume-create"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-docker-volume-create"}},[a._v("#")]),a._v(" 3. docker volume create")]),a._v(" "),e("ul",[e("li",[a._v("创建一个新的 Docker 卷。")]),a._v(" "),e("li",[a._v("语法："),e("code",[a._v("docker volume create [OPTIONS] <volume_name>")])]),a._v(" "),e("li",[a._v("例子:")])]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" volume create "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--name")]),a._v(" my_volume\n")])])]),e("p",[e("strong",[a._v("解释：")])]),a._v(" "),e("ul",[e("li",[e("code",[a._v("--name my_volume")]),a._v("：指定新创建的卷的名称为 my_volume。")])]),a._v(" "),e("hr"),a._v(" "),e("h3",{attrs:{id:"_4-docker-volume-rm"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-docker-volume-rm"}},[a._v("#")]),a._v(" 4. docker volume rm")]),a._v(" "),e("ul",[e("li",[a._v("删除一个 Docker 卷。")]),a._v(" "),e("li",[a._v("语法："),e("code",[a._v("docker volume rm <volume_name>")])]),a._v(" "),e("li",[a._v("例子:")])]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" volume "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" my_volume\n")])])]),e("p",[e("strong",[a._v("解释：")])]),a._v(" "),e("ul",[e("li",[e("code",[a._v("my_volume")]),a._v("：删除名为 my_volume 的卷。")])]),a._v(" "),e("hr"),a._v(" "),e("h2",{attrs:{id:"卷的常见用法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#卷的常见用法"}},[a._v("#")]),a._v(" 卷的常见用法")]),a._v(" "),e("h3",{attrs:{id:"_1-持久化数据库数据"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-持久化数据库数据"}},[a._v("#")]),a._v(" 1. 持久化数据库数据")]),a._v(" "),e("ul",[e("li",[a._v("容器中运行的数据库（如 MySQL、PostgreSQL）通常会使用卷来存储数据文件，这样即使容器重启或销毁，数据仍然保留。")])]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" run "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v(" my_db_volume:/var/lib/mysql mysql\n")])])]),e("p",[e("strong",[a._v("解释：")])]),a._v(" "),e("ul",[e("li",[e("code",[a._v("-v my_db_volume:/var/lib/mysql")]),a._v("：此命令将一个名为 "),e("code",[a._v("my_db_volume")]),a._v(" 的 Docker 卷挂载到容器内的 "),e("code",[a._v("/var/lib/mysql")]),a._v(" 目录。MySQL 数据库的数据文件默认存储在该目录下。通过将 MySQL 数据库的数据目录挂载到卷上，即使容器重启或被删除，数据库中的数据依然会保存在 "),e("code",[a._v("my_db_volume")]),a._v(" 卷中。\n"),e("ul",[e("li",[e("code",[a._v("my_db_volume")]),a._v(" 是一个 Docker 卷的名称。卷会由 Docker 自动创建并管理。")]),a._v(" "),e("li",[e("code",[a._v("/var/lib/mysql")]),a._v(" 是 MySQL 容器内的数据存储路径，通常这个目录包含了数据库的数据文件。")])])])]),a._v(" "),e("h3",{attrs:{id:"_2-共享文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-共享文件"}},[a._v("#")]),a._v(" 2. 共享文件")]),a._v(" "),e("ul",[e("li",[a._v("不同容器之间需要共享数据时，可以使用卷将数据挂载到多个容器中。")])]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" run "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v(" shared_volume:/data my_container\n")])])]),e("p",[e("strong",[a._v("解释：")])]),a._v(" "),e("ul",[e("li",[e("code",[a._v("-v shared_volume:/data")]),a._v("：这个命令将名为 "),e("code",[a._v("shared_volume")]),a._v(" 的卷挂载到容器内的 "),e("code",[a._v("/data")]),a._v(" 目录。通过挂载卷，容器内的数据就可以保存到这个卷中。\n"),e("ul",[e("li",[e("code",[a._v("shared_volume")]),a._v(" 是本地 Docker 卷的名称。")]),a._v(" "),e("li",[e("code",[a._v("/data")]),a._v(" 是容器内的目录，容器将会在这个目录中访问和存储数据。")])])])]),a._v(" "),e("h3",{attrs:{id:"_3-存储日志文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-存储日志文件"}},[a._v("#")]),a._v(" 3. 存储日志文件")]),a._v(" "),e("ul",[e("li",[a._v("日志文件通常需要持久化，并可能需要在宿主机上查看。通过卷，容器可以将日志文件输出到宿主机目录。")])]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" run "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v(" /host/logs:/container/logs nginx\n")])])]),e("p",[e("strong",[a._v("解释：")])]),a._v(" "),e("ul",[e("li",[e("code",[a._v("-v /host/logs:/container/logs")]),a._v("：将宿主机的 "),e("code",[a._v("/host/logs")]),a._v(" 目录挂载到容器的 "),e("code",[a._v("/container/logs")]),a._v(" 目录。容器中的应用（如 Nginx）可能会在 "),e("code",[a._v("/container/logs")]),a._v(" 目录中生成日志文件，通过挂载卷，我们可以将日志文件保存在宿主机的 "),e("code",[a._v("/host/logs")]),a._v(" 目录中。\n"),e("ul",[e("li",[e("code",[a._v("/host/logs")]),a._v(" 是宿主机上的目录，用来存储日志文件。")]),a._v(" "),e("li",[e("code",[a._v("/container/logs")]),a._v(" 是容器内的日志文件目录。")])])])]),a._v(" "),e("h3",{attrs:{id:"_4-备份数据"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-备份数据"}},[a._v("#")]),a._v(" 4. 备份数据")]),a._v(" "),e("ul",[e("li",[a._v("卷的持久化特性使得它非常适合用于容器的数据备份。可以通过将卷中的数据复制到宿主机上或其他地方来进行备份。")])]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" run "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--rm")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v(" my_volume:/data "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v(" /host/backup:/backup alpine "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("cp")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-r")]),a._v(" /data /backup\n")])])]),e("p",[e("strong",[a._v("解释：")])]),a._v(" "),e("ul",[e("li",[e("code",[a._v("--rm")]),a._v("：表示容器在执行完命令后会自动删除，不会保留容器。")]),a._v(" "),e("li",[e("code",[a._v("-v my_volume:/data")]),a._v("：将名为 "),e("code",[a._v("my_volume")]),a._v(" 的卷挂载到容器内的 "),e("code",[a._v("/data")]),a._v(" 目录。"),e("code",[a._v("my_volume")]),a._v(" 卷可能存储了一些需要备份的数据。")]),a._v(" "),e("li",[e("code",[a._v("-v /host/backup:/backup")]),a._v("：将宿主机的 "),e("code",[a._v("/host/backup")]),a._v(" 目录挂载到容器内的 "),e("code",[a._v("/backup")]),a._v(" 目录。容器内的 "),e("code",[a._v("/backup")]),a._v(" 目录用来存储备份的数据。")]),a._v(" "),e("li",[e("code",[a._v("alpine cp -r /data /backup")]),a._v("：在容器内运行 "),e("code",[a._v("cp")]),a._v(" 命令，将 "),e("code",[a._v("/data")]),a._v(" 目录中的所有内容复制到 "),e("code",[a._v("/backup")]),a._v(" 目录，"),e("code",[a._v("-r")]),a._v(" 选项表示递归复制所有子目录和文件。")])]),a._v(" "),e("h2",{attrs:{id:"docker-compose-相关指令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#docker-compose-相关指令"}},[a._v("#")]),a._v(" Docker Compose 相关指令")]),a._v(" "),e("h3",{attrs:{id:"_1-docker-compose-up"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-docker-compose-up"}},[a._v("#")]),a._v(" 1. docker-compose up")]),a._v(" "),e("ul",[e("li",[a._v("启动并运行 Docker Compose 定义的服务。")]),a._v(" "),e("li",[a._v("语法："),e("code",[a._v("docker-compose up [OPTIONS]")])]),a._v(" "),e("li",[a._v("例子:")])]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker-compose")]),a._v(" up "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--build")]),a._v("\n")])])]),e("p",[e("strong",[a._v("解释：")])]),a._v(" "),e("ul",[e("li",[e("code",[a._v("-d")]),a._v("：以分离模式启动容器，即在后台运行。")]),a._v(" "),e("li",[e("code",[a._v("--build")]),a._v("：在启动服务前重新构建镜像。")])]),a._v(" "),e("hr"),a._v(" "),e("h3",{attrs:{id:"_2-docker-compose-down"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-docker-compose-down"}},[a._v("#")]),a._v(" 2. docker-compose down")]),a._v(" "),e("ul",[e("li",[a._v("停止并删除 Docker Compose 启动的容器、网络等资源。")]),a._v(" "),e("li",[a._v("语法："),e("code",[a._v("docker-compose down [OPTIONS]")])]),a._v(" "),e("li",[a._v("例子:")])]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker-compose")]),a._v(" down "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--volumes")]),a._v("\n")])])]),e("p",[e("strong",[a._v("解释：")])]),a._v(" "),e("ul",[e("li",[e("code",[a._v("--volumes")]),a._v("：同时删除与服务相关的卷。")])]),a._v(" "),e("hr"),a._v(" "),e("h3",{attrs:{id:"_3-docker-compose-logs"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-docker-compose-logs"}},[a._v("#")]),a._v(" 3. docker-compose logs")]),a._v(" "),e("ul",[e("li",[a._v("查看 Docker Compose 启动的服务的日志。")]),a._v(" "),e("li",[a._v("语法："),e("code",[a._v("docker-compose logs [OPTIONS] [SERVICE...]")])]),a._v(" "),e("li",[a._v("例子:")])]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker-compose")]),a._v(" logs "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--tail")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("100")]),a._v("\n")])])]),e("p",[e("strong",[a._v("解释：")])]),a._v(" "),e("ul",[e("li",[e("code",[a._v("-f")]),a._v("：实时跟踪日志输出。")]),a._v(" "),e("li",[e("code",[a._v("--tail 100")]),a._v("：显示日志的最后 100 行。")])]),a._v(" "),e("hr"),a._v(" "),e("h3",{attrs:{id:"_4-docker-compose-build"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-docker-compose-build"}},[a._v("#")]),a._v(" 4. docker-compose build")]),a._v(" "),e("ul",[e("li",[a._v("构建 Docker Compose 定义的服务镜像。")]),a._v(" "),e("li",[a._v("语法："),e("code",[a._v("docker-compose build [OPTIONS] [SERVICE...]")])]),a._v(" "),e("li",[a._v("例子:")])]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker-compose")]),a._v(" build --no-cache\n")])])]),e("p",[e("strong",[a._v("解释：")])]),a._v(" "),e("ul",[e("li",[e("code",[a._v("--no-cache")]),a._v("：构建过程中不使用缓存。")])]),a._v(" "),e("hr")])}),[],!1,null,null,null);e.default=t.exports}}]);