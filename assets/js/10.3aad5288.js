(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{379:function(t,e,a){"use strict";a.r(e);var l=a(14),s=Object(l.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"_1-内存管理参数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-内存管理参数"}},[t._v("#")]),t._v(" 1. 内存管理参数")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"left"}},[t._v("参数")]),t._v(" "),e("th",{staticStyle:{"text-align":"left"}},[t._v("示例")]),t._v(" "),e("th",{staticStyle:{"text-align":"left"}},[t._v("说明")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("-Xms<size>")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("-Xms512m")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("设置 JVM 初始堆大小为 512MB。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("-Xmx<size>")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("-Xmx1024m")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("设置 JVM 最大堆大小为 1024MB，堆内存的上限，超过此值会抛出 OutOfMemoryError。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("-Xmn<size>")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("-Xmn256m")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("设置年轻代大小为 256MB，年轻代负责短生命周期对象的内存分配与回收。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("-XX:MetaspaceSize=<size>")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("-XX:MetaspaceSize=128m")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("设置元空间的初始大小为 128MB（JDK 8 及以上）。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("-XX:MaxMetaspaceSize=<size>")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("-XX:MaxMetaspaceSize=256m")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("设置元空间的最大大小为 256MB，元空间存放类的元数据。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("-XX:HeapDumpPath=<path>")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("-XX:HeapDumpPath=/logs/dump")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("设置堆转储文件生成的路径为 /logs/dump，通常用于内存泄漏分析。")])])])]),t._v(" "),e("h2",{attrs:{id:"_2-垃圾回收器参数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-垃圾回收器参数"}},[t._v("#")]),t._v(" 2. 垃圾回收器参数")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"left"}},[t._v("参数")]),t._v(" "),e("th",{staticStyle:{"text-align":"left"}},[t._v("示例")]),t._v(" "),e("th",{staticStyle:{"text-align":"left"}},[t._v("说明")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("-XX:+UseSerialGC")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}}),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("使用串行垃圾回收器，适合单线程应用程序，使用简单但效率低。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("-XX:+UseParallelGC")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}}),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("使用并行垃圾回收器，适合多核 CPU，优化吞吐量。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("-XX:+UseG1GC")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}}),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("使用 G1 垃圾回收器，适用于低延迟、大内存的应用场景，减少垃圾回收停顿时间。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("-XX:MaxGCPauseMillis=<n>")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("-XX:MaxGCPauseMillis=200")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("设置 GC 最大停顿时间为 200 毫秒（适用于 G1 垃圾回收器）")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("-XX:+PrintGCDetails")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}}),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("打印详细的垃圾回收日志信息，包括每次 GC 的时间、类型和内存变化。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("-XX:+PrintGCDateStamps")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}}),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("在 GC 日志中增加时间戳，用于排查历史日志问题。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("-XX:+HeapDumpOnOutOfMemoryError")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}}),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("当发生 OutOfMemoryError 时生成堆转储文件，用于分析内存问题")])])])]),t._v(" "),e("h2",{attrs:{id:"_3-线程相关参数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-线程相关参数"}},[t._v("#")]),t._v(" 3. 线程相关参数")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"left"}},[t._v("参数")]),t._v(" "),e("th",{staticStyle:{"text-align":"left"}},[t._v("示例")]),t._v(" "),e("th",{staticStyle:{"text-align":"left"}},[t._v("说明")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("-Xss<size>")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("-Xss1m")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("设置每个线程的栈大小为 1MB。较大的栈大小可以支持更深的递归调用，但会占用更多内存。默认值通常是 512KB 或 1MB。")])])])]),t._v(" "),e("h2",{attrs:{id:"_4-性能优化相关参数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-性能优化相关参数"}},[t._v("#")]),t._v(" 4.性能优化相关参数")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"left"}},[t._v("参数")]),t._v(" "),e("th",{staticStyle:{"text-align":"left"}},[t._v("示例")]),t._v(" "),e("th",{staticStyle:{"text-align":"left"}},[t._v("说明")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("-Xverify:none")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}}),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("禁用字节码验证，减少类加载的开销，提高启动速度。适合在生产环境下的优化，但需确保代码无安全风险。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("-XX:+AggressiveOpts")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}}),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("启用试验性优化参数，可能带来性能提升，但功能尚未完全稳定。通常用于测试环境或性能测试阶段。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("-XX:+UnlockExperimentalVMOptions")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}}),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("解锁 JVM 的实验性参数。与 -XX:+UseG1GC 等选项搭配使用时需要此参数。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("-XX:CompileThreshold=<n>")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("-XX:CompileThreshold=1000")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("设置方法的调用次数达到 1000 次后触发 JIT 编译。适用于需要频繁调用的小方法优化。")])])])]),t._v(" "),e("h2",{attrs:{id:"_5-示例组合"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-示例组合"}},[t._v("#")]),t._v(" 5. 示例组合")]),t._v(" "),e("div",{staticClass:"language-dockerfile extra-class"},[e("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用 OpenJDK 作为基础镜像")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token instruction"}},[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" openjdk:17-jdk-slim")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置工作目录为 /app/fmea")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token instruction"}},[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WORKDIR")]),t._v(" /app/fmea")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将 target 复制到容器中的 /app/fmea")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token instruction"}},[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COPY")]),t._v(" target /app/fmea")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置类路径，包含 config、lib 和 JAR 文件")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token instruction"}},[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ENV")]),t._v(" CLASSPATH=/app/fmea/config:/app/fmea/lib/*:/app/fmea/lib/palmdoit_server-0.0.1-SNAPSHOT.jar")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# JVM 调优参数")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token instruction"}},[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ENV")]),t._v(" JAVA_OPTS="),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-Xms512m -Xmx1024m -XX:+UseG1GC -XX:MaxGCPauseMillis=200 -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/app/fmea/logs/heapdump.hprof"')])]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 暴露端口")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token instruction"}},[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("EXPOSE")]),t._v(" 7007")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置容器启动命令，启动主类，并使用 JAVA_OPTS")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token instruction"}},[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ENTRYPOINT")]),t._v(" ["),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sh"')]),t._v(", "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-c"')]),t._v(", "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"java $JAVA_OPTS -Xverify:none -cp /app/fmea/config:/app/fmea/lib/*:/app/fmea/lib/palmdoit_server-0.0.1-SNAPSHOT.jar com.palmdoit.common.MyConfig"')]),t._v("]")]),t._v("\n")])])])])}),[],!1,null,null,null);e.default=s.exports}}]);